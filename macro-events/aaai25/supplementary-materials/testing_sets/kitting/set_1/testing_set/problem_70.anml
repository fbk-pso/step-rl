type Location;
type Kit;
type Component;
type Robot;
constant integer [0, 1] distance(Location a, Location b);
constant boolean is_present(Component c, Location l);
constant Component components_on_kit(Kit k, integer [0, 3] i);
fluent boolean robot_busy(Robot r);
fluent boolean human_busy;
fluent boolean ready_to_receive(integer [0, 1] i_0);
fluent boolean robot_at(Robot r, Location l);
fluent Component components_on_robot(Robot r, integer [0, 3] i);
fluent boolean completed(integer [0, 1] i_0, Kit k);
fluent integer [0, 4] robot_cnt(Robot r);
fluent integer [0, 2] kit_cnt;
fluent integer [0, 10] battery(Robot r);
action move(Robot r, Location l_from, Location l_to) {
   duration >= distance(l_from, l_to) and duration <= distance(l_from, l_to);
   [ start ] (not robot_busy(r));
   [ start ] (not (l_from == l_to));
   [ start ] robot_at(r, l_from);
   [ start ] (0 < distance(l_from, l_to));
   [ start ] (0 < battery(r));
   [ start ] robot_busy(r) := true;
   [ start ] battery(r) :decrease 1;
   [ start ] robot_at(r, l_from) := false;
   [ end ] robot_busy(r) := false;
   [ end ] robot_at(r, l_to) := true;
};
action load(Robot r, Location l, Component c, Kit k, integer [0, 3] i) {
   duration >= 5 and duration <= 5;
   [ start ] (not robot_busy(r));
   [ start ] robot_at(r, l);
   [ start ] is_present(c, l);
   [ start ] (robot_cnt(r) == i);
   [ start ] (components_on_robot(r, i) == EMPTY);
   [ start ] (components_on_kit(k, i) == c);
   [ start ] robot_busy(r) := true;
   [ end ] robot_busy(r) := false;
   [ end ] components_on_robot(r, i) := c;
   [ end ] robot_cnt(r) := (i + 1);
};
action prepare_unload(integer [0, 1] i_0) {
   duration >= 30 and duration <= 30;
   [ start ] (not human_busy);
   [ start ] (kit_cnt == i_0);
   [ start ] human_busy := true;
   [ end ] human_busy := false;
   [ start + 10 ] ready_to_receive(i_0) := true;
   [ start + 20 ] ready_to_receive(i_0) := false;
};
action unload(Robot r, Kit k, integer [0, 1] i_0) {
   duration >= 5 and duration <= 5;
   [ start ] (not robot_busy(r));
   [ start ] robot_at(r, l0);
   [ start ] (kit_cnt == i_0);
   [ start ] (components_on_kit(k, 0) == components_on_robot(r, 0));
   [ start ] (components_on_kit(k, 1) == components_on_robot(r, 1));
   [ start ] (components_on_kit(k, 2) == components_on_robot(r, 2));
   [ start ] (components_on_kit(k, 3) == components_on_robot(r, 3));
   [ start, end ] ready_to_receive(i_0);
   [ start ] robot_busy(r) := true;
   [ end ] robot_busy(r) := false;
   [ end ] components_on_robot(r, 0) := EMPTY;
   [ end ] components_on_robot(r, 1) := EMPTY;
   [ end ] components_on_robot(r, 2) := EMPTY;
   [ end ] components_on_robot(r, 3) := EMPTY;
   [ end ] robot_cnt(r) := 0;
   [ end ] completed(i_0, k) := true;
   [ end ] kit_cnt := (i_0 + 1);
   [ end ] battery(r) := 5;
};
instance Location l0, l1, l2, l3;
instance Kit k1;
instance Component EMPTY, c1, c2, c3;
instance Robot r0, r1;
distance(l0, l0) := 1;
distance(l1, l0) := 1;
distance(l2, l0) := 1;
distance(l3, l0) := 1;
distance(l0, l1) := 1;
distance(l1, l1) := 1;
distance(l2, l1) := 1;
distance(l3, l1) := 1;
distance(l0, l2) := 1;
distance(l1, l2) := 1;
distance(l2, l2) := 1;
distance(l3, l2) := 1;
distance(l0, l3) := 1;
distance(l1, l3) := 1;
distance(l2, l3) := 1;
distance(l3, l3) := 1;
is_present(EMPTY, l0) := false;
is_present(c1, l0) := false;
is_present(c2, l0) := false;
is_present(c3, l0) := false;
is_present(EMPTY, l1) := false;
is_present(c1, l1) := true;
is_present(c2, l1) := false;
is_present(c3, l1) := false;
is_present(EMPTY, l2) := false;
is_present(c1, l2) := false;
is_present(c2, l2) := true;
is_present(c3, l2) := false;
is_present(EMPTY, l3) := false;
is_present(c1, l3) := false;
is_present(c2, l3) := false;
is_present(c3, l3) := true;
components_on_kit(k1, 0) := c3;
components_on_kit(k1, 1) := c2;
components_on_kit(k1, 2) := c2;
components_on_kit(k1, 3) := EMPTY;
[ start ] robot_busy(r0) := false;
[ start ] robot_busy(r1) := false;
[ start ] human_busy := false;
[ start ] ready_to_receive(0) := false;
[ start ] ready_to_receive(1) := false;
[ start ] robot_at(r0, l0) := true;
[ start ] robot_at(r1, l0) := false;
[ start ] robot_at(r0, l1) := false;
[ start ] robot_at(r1, l1) := false;
[ start ] robot_at(r0, l2) := false;
[ start ] robot_at(r1, l2) := false;
[ start ] robot_at(r0, l3) := false;
[ start ] robot_at(r1, l3) := false;
[ start ] components_on_robot(r0, 0) := EMPTY;
[ start ] components_on_robot(r1, 0) := EMPTY;
[ start ] components_on_robot(r0, 1) := EMPTY;
[ start ] components_on_robot(r1, 1) := EMPTY;
[ start ] components_on_robot(r0, 2) := EMPTY;
[ start ] components_on_robot(r1, 2) := EMPTY;
[ start ] components_on_robot(r0, 3) := EMPTY;
[ start ] components_on_robot(r1, 3) := EMPTY;
[ start ] completed(0, k1) := false;
[ start ] completed(1, k1) := false;
[ start ] robot_cnt(r0) := 0;
[ start ] robot_cnt(r1) := 0;
[ start ] kit_cnt := 0;
[ start ] battery(r0) := 5;
[ start ] battery(r1) := 5;
[ end ] completed(0, k1);
