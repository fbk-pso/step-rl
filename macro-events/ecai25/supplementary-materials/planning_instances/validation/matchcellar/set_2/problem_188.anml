type Match;
type Fuse;
fluent boolean handfree;
fluent boolean light;
fluent boolean match_used(Match match);
fluent boolean fuse_mended(Fuse fuse);
constant float [0.0, 6.0] mend_fuse_duration;
action light_match(Match m) {
   duration >= 7 and duration <= 7;
   [ start ] (not match_used(m));
   [ start ] match_used(m) := true;
   [ start ] light := true;
   [ end ] light := false;
};
action mend_fuse(Fuse f) {
   duration >= mend_fuse_duration and duration <= mend_fuse_duration;
   [ start ] handfree;
   [ start, end ] light;
   [ start ] handfree := false;
   [ end ] fuse_mended(f) := true;
   [ end ] handfree := true;
};
instance Match m24, m25, m26, m27, m28, m29, m30;
instance Fuse f24, f25, f26, f27, f28, f29, f30;
[ start ] handfree := true;
[ start ] light := false;
[ start ] match_used(m24) := false;
[ start ] match_used(m25) := false;
[ start ] match_used(m26) := false;
[ start ] match_used(m27) := false;
[ start ] match_used(m28) := false;
[ start ] match_used(m29) := false;
[ start ] match_used(m30) := false;
[ start ] fuse_mended(f24) := false;
[ start ] fuse_mended(f25) := false;
[ start ] fuse_mended(f26) := false;
[ start ] fuse_mended(f27) := false;
[ start ] fuse_mended(f28) := false;
[ start ] fuse_mended(f29) := false;
[ start ] fuse_mended(f30) := false;
mend_fuse_duration := (6/1);
[ end ] fuse_mended(f24);
[ end ] fuse_mended(f25);
[ end ] fuse_mended(f26);
[ end ] fuse_mended(f27);
[ end ] fuse_mended(f28);
[ end ] fuse_mended(f29);
[ end ] fuse_mended(f30);
