type Match;
type Fuse;
fluent boolean handfree;
fluent boolean light;
fluent boolean match_used(Match match);
fluent boolean fuse_mended(Fuse fuse);
constant float [0.0, 6.0] mend_fuse_duration;
action light_match(Match m) {
   duration >= 7 and duration <= 7;
   [ start ] (not match_used(m));
   [ start ] match_used(m) := true;
   [ start ] light := true;
   [ end ] light := false;
};
action mend_fuse(Fuse f) {
   duration >= mend_fuse_duration and duration <= mend_fuse_duration;
   [ start ] handfree;
   [ start, end ] light;
   [ start ] handfree := false;
   [ end ] fuse_mended(f) := true;
   [ end ] handfree := true;
};
instance Match m7, m8, m9, m10, m11, m12, m13, m14, m15;
instance Fuse f7, f8, f9, f10, f11, f12, f13, f14, f15;
[ start ] handfree := true;
[ start ] light := false;
[ start ] match_used(m7) := false;
[ start ] match_used(m8) := false;
[ start ] match_used(m9) := false;
[ start ] match_used(m10) := false;
[ start ] match_used(m11) := false;
[ start ] match_used(m12) := false;
[ start ] match_used(m13) := false;
[ start ] match_used(m14) := false;
[ start ] match_used(m15) := false;
[ start ] fuse_mended(f7) := false;
[ start ] fuse_mended(f8) := false;
[ start ] fuse_mended(f9) := false;
[ start ] fuse_mended(f10) := false;
[ start ] fuse_mended(f11) := false;
[ start ] fuse_mended(f12) := false;
[ start ] fuse_mended(f13) := false;
[ start ] fuse_mended(f14) := false;
[ start ] fuse_mended(f15) := false;
mend_fuse_duration := (6/1);
[ end ] fuse_mended(f7);
[ end ] fuse_mended(f8);
[ end ] fuse_mended(f9);
[ end ] fuse_mended(f10);
[ end ] fuse_mended(f11);
[ end ] fuse_mended(f12);
[ end ] fuse_mended(f13);
[ end ] fuse_mended(f14);
[ end ] fuse_mended(f15);
