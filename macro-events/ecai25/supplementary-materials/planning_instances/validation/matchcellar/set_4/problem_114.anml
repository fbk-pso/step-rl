type Match;
type Fuse;
fluent boolean handfree;
fluent boolean light;
fluent boolean match_used(Match match);
fluent boolean fuse_mended(Fuse fuse);
constant float [0.0, 6.0] mend_fuse_duration;
action light_match(Match m) {
   duration >= 7 and duration <= 7;
   [ start ] (not match_used(m));
   [ start ] match_used(m) := true;
   [ start ] light := true;
   [ end ] light := false;
};
action mend_fuse(Fuse f) {
   duration >= mend_fuse_duration and duration <= mend_fuse_duration;
   [ start ] handfree;
   [ start, end ] light;
   [ start ] handfree := false;
   [ end ] fuse_mended(f) := true;
   [ end ] handfree := true;
};
instance Match m1, m2, m3, m4, m5;
instance Fuse f1, f2, f3, f4, f5;
[ start ] handfree := true;
[ start ] light := false;
[ start ] match_used(m1) := false;
[ start ] match_used(m2) := false;
[ start ] match_used(m3) := false;
[ start ] match_used(m4) := false;
[ start ] match_used(m5) := false;
[ start ] fuse_mended(f1) := false;
[ start ] fuse_mended(f2) := false;
[ start ] fuse_mended(f3) := false;
[ start ] fuse_mended(f4) := false;
[ start ] fuse_mended(f5) := false;
mend_fuse_duration := (6/1);
[ end ] fuse_mended(f1);
[ end ] fuse_mended(f2);
[ end ] fuse_mended(f3);
[ end ] fuse_mended(f4);
[ end ] fuse_mended(f5);
